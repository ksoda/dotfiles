"" Basic Setup
"*****************************************************************************"
set softtabstop=-1

"" Enable hidden buffers
set hidden

"" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.pyc,*.db,*.sqlite


"" Visual Settings
"*****************************************************************************
set relativenumber

set mouse=a
set ttymouse=xterm2

set showtabline=2

set scrolloff=5
set cursorline
highlight ColorColumn ctermbg=0 guibg=#2c2d27

let g:netrw_preview=1           " open previews vertically
let g:netrw_liststyle=3         " tree
let g:netrw_browse_split=4      " act like open previous window
let g:netrw_winsize=-80         " abs col

" Copy/Paste/Cut
if has('unnamedplus')
  set clipboard=unnamed,unnamedplus
else
  set clipboard=unnamed
endif


"" Abbreviations
"*****************************************************************************
abbrev pry binding.pry


"" Autocmd Rules
"*****************************************************************************
autocmd BufWritePre * :%s/\s\+$//e


"" Mappings
"*****************************************************************************
"" Tabs
nnoremap <Tab> gt
nnoremap <S-Tab> gT
nnoremap <silent> <S-t> :tabnew<CR>
cnoremap <C-P> <C-R>=expand("%:p:h") . "/" <CR>

"" Close buffer
noremap <leader>c :bd<CR>

"" CtrlP
noremap <leader>b :CtrlPBuffer<CR>
let g:ctrlp_map = '<leader>p'

"" Tagbar
nnoremap <leader>to :TagbarOpenAutoClose<CR>
nnoremap <leader>tt :TagbarToggle<CR>
let g:tagbar_autofocus = 1

"" Neocomplete
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_auto_select = 1

" Enable omni completion.
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
autocmd FileType ruby setlocal omnifunc=rubycomplete#Complete

" Enable heavy omni completion.
if !exists('g:neocomplete#sources#omni#input_patterns')
  let g:neocomplete#sources#omni#input_patterns = {}
endif
let g:neocomplete#sources#omni#input_patterns.c = '[^.[:digit:] *\t]\%(\.\|->\)'
let g:neocomplete#sources#omni#input_patterns.ruby = '[^. *\t]\.\w*\|\h\w*::'

inoremap <expr><C-l> neocomplete#complete_common_string()
inoremap <expr><TAB> pumvisible() ? "\<C-y>" : "\<TAB>"
inoremap <silent> <CR> <C-r>=<SID>select_candidate()<CR>
function! s:select_candidate()
  return pumvisible() ? "\<C-y>" : "\<CR>"
endfunction

"" Haskell
augroup ghcmodcheck
  autocmd!
  autocmd BufWritePost *.hs GhcModCheckAsync
augroup END
nnoremap <leader>gt :GhcModType<CR>

